version: '3.8'

services:
  keystone-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: keystone-gateway-prod
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./configs/production.yaml:/app/config.yaml:ro
      - ./scripts:/app/scripts:ro
      - ./logs:/app/logs
    environment:
      - ENV=production
      - LOG_LEVEL=info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - gateway-network
    deploy:
      resources:
        limits:
          cpus: '3.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 512M

  nginx:
    image: nginx:alpine
    container_name: nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      keystone-gateway:
        condition: service_healthy
    networks:
      - gateway-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  # Real backend services for testing
  httpbin-1:
    image: mccutchen/go-httpbin  # Go-basiert, multi-arch
    container_name: httpbin-1
    restart: unless-stopped
    networks:
      - gateway-network

  httpbin-2:
    image: mccutchen/go-httpbin
    container_name: httpbin-2
    restart: unless-stopped
    networks:
      - gateway-network

  jsonplaceholder:
    image: nginx:alpine
    container_name: jsonplaceholder-mock
    restart: unless-stopped
    volumes:
      - ./mock-data:/usr/share/nginx/html:ro
    networks:
      - gateway-network
    deploy:
      resources:
        limits:
          memory: 128M

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-prod
    restart: unless-stopped
    ports:
      - "127.0.0.1:9090:9090"  # Only local access
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=72h'
      - '--web.enable-lifecycle'
    networks:
      - gateway-network
    deploy:
      resources:
        limits:
          memory: 512M

networks:
  gateway-network:
    driver: bridge

volumes:
  prometheus-data:
  nginx-logs:
